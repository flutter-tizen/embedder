# Copyright 2022 Samsung Electronics Co., Ltd. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  # How many (unstripped) symbols to include in the build.
  #   2 means regular build with symbols.
  #   1 means minimal symbols, usually enough for backtraces only.
  #   0 means no symbols.
  symbol_level = 1

  # Unoptimized build (a.k.a. debug build).
  is_unopt = false

  # Path to a toolchain containing the compilers, linkers, and associated tools
  # to build native binaries.
  toolchain_path = ""

  # Path to a sysroot containing the system libraries and associated headers on
  # the target.
  sysroot_path = ""

  # The target triple, e.g. arm-linux-gnueabi.
  target_triple = ""

  # The compiler version.
  clang_version = 10

  # Use the system libstdc++ without building third_party/libcxx from source.
  use_system_cxx = false
}

_default_configs = [
  "//build/config:compiler",
  "//build/config:cxx_version_default",
]

if (use_system_cxx) {
  _default_configs += [ "//build/config:system_cxx" ]
} else {
  _default_configs += [ "//build/config:no_system_cxx" ]
}

if (is_unopt) {
  _default_configs += [ "//build/config:no_optimize" ]
} else {
  _default_configs += [ "//build/config:optimize" ]
}

_executable_configs = _default_configs + [ "//build/config:ldconfig" ]

set_defaults("executable") {
  configs = _executable_configs
  deps = []

  if (!use_system_cxx) {
    deps += [ "//third_party/libcxx" ]
  }
}

set_defaults("static_library") {
  configs = _default_configs
  deps = []
}

set_defaults("shared_library") {
  configs = _executable_configs
  deps = []

  if (!use_system_cxx) {
    deps += [ "//third_party/libcxx" ]
  }
}

set_defaults("source_set") {
  configs = _default_configs
  deps = []
}

set_default_toolchain("//build/config:clang")
